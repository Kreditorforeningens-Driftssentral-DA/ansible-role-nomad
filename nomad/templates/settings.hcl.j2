################################################################################
# {{ ansible_managed }}
################################################################################
# ------------------------------------------------------------------------------
#                                                              General settings
# ------------------------------------------------------------------------------

datacenter = "{{ nomad_datacenter | default('dc1') }}"
region     = "{{ nomad_region | default('global') }}"
data_dir   = "{{ path_storage }}/{{ application }}/data"
plugin_dir = "{{ plugin_dir }}"

# ------------------------------------------------------------------------------
#                                                              Network settings
# ------------------------------------------------------------------------------

bind_addr  = "0.0.0.0"

ports {
  http = 4646
  rpc  = 4647
  serf = 4648
}

advertise {
  http = "{{ ansible_default_ipv4['address'] }}"
  rpc  = "{{ ansible_default_ipv4['address'] }}"
  serf = "{{ ansible_default_ipv4['address'] }}"
}

# ------------------------------------------------------------------------------
#                                                               Server settings
# ------------------------------------------------------------------------------

server {
  enabled          = {{ server_enabled | default(true) | bool | lower }}
{% if server_enabled %}
  bootstrap_expect = {{ server_bootstrap_expect | default(1) | int }}
{% endif %}
{% if encryption_enabled %}
  encrypt           = "{{ encryption_key | mandatory }}"
{% endif %}

{% if not consul_enabled %}
  server_join {
    retry_join = {{ server_bootstrap_address | default('["127.0.0.1"]') | to_json }}
    retry_interval = "15s"
  }
{% endif %}
}

autopilot {
  cleanup_dead_servers      = true
  last_contact_threshold    = "5s"
  max_trailing_logs         = 500
  server_stabilization_time = "15s"
  ## Enterprise Settings
  #enable_redundancy_zones   = false
  #disable_upgrade_migration = false
  #enable_custom_upgrades    = false
}

# ------------------------------------------------------------------------------
#                                                               Client settings
# ------------------------------------------------------------------------------

client {
  enabled    = {{ client_enabled | default(false) | bool | lower }}
{% if server_enabled %}
  node_class = "server"
{% else %}
  node_class = "client"
{% endif %}
  reserved {
    memory = {{ client_reserved_mem  | default(0) | int }}
    cpu    = {{ client_reserved_cpu  | default(0) | int }}
    disk   = {{ client_reserved_disk | default(0) | int }}
  }

{% if (not server_enabled) and (not consul_enabled) %}
  server_join {
    retry_join     = {{ server_bootstrap_address | default('["127.0.0.1"]') | to_json }}
    retry_interval = "15s"
  }
{% endif %}

  meta {
{% for key,value in client_meta.items() %}
  "{{ key }}" = "{{ value }}"
{% endfor %}
    "deployment" = "ansible-role"
  }

{% if client_legacy_drivers_enabled %}
  options = {
    "driver.whitelist" = "{{ client_driver_whitelist | default('') }}"
    "driver.blacklist" = "{{ client_driver_blacklist | default('') }}"
  }
{% endif %}
{% if cni_enabled %}
  cni_path            = "{{ cni_path }}"
  bridge_network_name = "{{ cni_bridge_name | default('nomad') }}"
{% endif %}
  host_volume "ca-certificates" {
      path      = "/etc/ssl/certs"
      read_only = true
  }
}

# ------------------------------------------------------------------------------
#                                                                  ACL settings
# ------------------------------------------------------------------------------

acl {
  enabled           = {{ acl_enabled | default(false) | bool | lower }}
  replication_token = "{{ acl_token | default('') }}"
  token_ttl         = "60s"
  policy_ttl        = "120s"
}

# ------------------------------------------------------------------------------
#                                                                  TLS settings
# ------------------------------------------------------------------------------

{% if tls_enabled %}
tls {
  http      = "{{ tls_http | default(false) | bool | lower }}"
  rpc       = "{{ tls_rpc | default(false) | bool | lower }}"
  ca_file   = "{{ tls_ca | default('') }}"
  cert_file = "{{ tls_cert | default('') }}"
  key_file  = "{{ tls_key | default('') }}"
}
{% else %}
# TLS not enabled
{% endif %}

# ------------------------------------------------------------------------------
#                                                               Consul settings
# ------------------------------------------------------------------------------

{% if consul_enabled %}
consul {
  address              = "{{ consul_address | default('127.0.0.1:8500') }}"
  token                = "{{ consul_token | default('') }}"
  checks_use_advertise = true
  auto_advertise       = true
  server_auto_join     = true
  client_auto_join     = true
  client_service_name  = "nomad-client"
  server_service_name  = "nomad-server"
  auth                 = "{{ consul_auth | default('') }}"
  ssl                  = "{{ consul_ssl | default(false) | bool | lower }}"
  ca_file              = "{{ consul_ca_file | default('') }}"
  cert_file            = "{{ consul_cert_file | default('') }}"
  key_file             = "{{ consul_key_file | default('') }}"
}
{% else %}
# Consul not enabled
{% endif %}

# ------------------------------------------------------------------------------
#                                                                Vault settings
# ------------------------------------------------------------------------------

{% if vault_enabled %}
vault {
  enabled          = {{ vault_enabled | default(false) | bool | lower }}
  address          = "{{ vault_address | default('http://127.0.0.1:8200') }}"

  tls_skip_verify = {{ vault_tls_skip | default(false) | bool | lower }}
  ca_path         = "{{ vault_ca_path | default('') }}"
  cert_file       = "{{ vault_cert_file | default('') }}"
  key_file        = "{{ vault_key_file | default('') }}"

{% if server_enabled %}
  token            = "{{ vault_token | default('') }}"
  create_from_role = "{{ vault_create_from_role | default('nomad-cluster') }}"
{% endif %}
}
{% else %}
# Vault not enabled
{% endif %}

# ------------------------------------------------------------------------------
#                                                            Telemetry settings
# ------------------------------------------------------------------------------

{% if telemetry_enabled %}
telemetry {
  publish_allocation_metrics = "{{ telemetry_enabled | default(true) | bool | lower }}"
  publish_node_metrics       = "{{ telemetry_enabled | default(true) | bool | lower }}"
  collection_interval        = "{{ telemetry_interval | default('10s') }}"

  prometheus_metrics = "{{ telemetry_prometheus_enabled | default(true) | bool | lower }}"
}
{% else %}
# Telemetry not enabled
{% endif %}

################################################################################
# {{ ansible_managed }}
################################################################################
